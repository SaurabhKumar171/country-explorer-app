# version: "3.8"

# services:
#   # Backend Service (Node.js API)
#   backend:
#     build: ./server
#     container_name: backend_service
#     ports:
#       - "5000:5000"
#     environment:
#       - MONGO_URI=mongodb://mongo:27017/countriesDB
#     depends_on:
#       seeder: # Wait for the seeder to finish successfully
#         condition: service_completed_successfully
#     networks:
#       - app-network

#   # Frontend Service (Next.js App)
#   frontend:
#     build: ./client
#     container_name: frontend_service
#     ports:
#       - "3000:3000"
#     environment:
#       # CORRECTED: Use the service name 'backend', not the container_name
#       - NEXT_PUBLIC_API_URL=http://backend:5000/api/v1
#     depends_on:
#       - backend # Ensures backend starts before the frontend
#     networks:
#       - app-network

#   # Database Service (MongoDB)
#   mongo:
#     image: mongo:latest
#     container_name: mongo_db
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db
#     networks:
#       - app-network

#   # CORRECTED: Seeder Service is now a top-level service
#   seeder:
#     build: ./server
#     command: npm run seed
#     environment:
#       - MONGO_URI=mongodb://mongo:27017/countriesDB
#     depends_on:
#       - mongo
#     networks:
#       - app-network

# # Define the network
# networks:
#   app-network:
#     driver: bridge

# # Define the volume for persistent MongoDB data
# volumes:
#   mongo-data:
#     driver: local

version: "3.8"

services:
  # Backend Service (Node.js API)
  backend:
    build: ./server # Or ./backend
    container_name: backend_service
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/countriesDB
    depends_on:
      seeder:
        condition: service_completed_successfully
    networks:
      - app-network

  # Frontend Service (Next.js App)
  frontend:
    build: ./client # Or ./frontend
    container_name: frontend_service
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:5000/api/v1
    depends_on:
      - backend
    networks:
      - app-network

  # Database Service (MongoDB)
  mongo:
    image: mongo:latest
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # Seeder Service to populate the database
  seeder:
    build: ./server # Or ./backend
    command: npm run seed
    environment:
      - MONGO_URI=mongodb://mongo:27017/countriesDB
    depends_on:
      - mongo
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
